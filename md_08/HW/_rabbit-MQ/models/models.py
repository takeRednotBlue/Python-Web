'''
Друга частина

Напишіть два скрипти: consumer.py та producer.py. Використовуючи RabbitMQ, організуйте за допомогою черг імітацію 
розсилки email контактам.

Використовуючи ODM Mongoengine, створіть модель для контакту. Модель обов'язково повинна містити поля: повне ім'я, email 
та логічне поле, яке має значення False за замовчуванням. Воно означає, що повідомлення контакту не надіслано і повинно 
стати True, коли буде відправлено. Інші поля для інформаційного навантаження можете придумати самі.

Під час запуску скрипта producer.py він генерує певну кількість фейкових контактів та записує їх у базу даних. Потім 
поміщає у чергу RabbitMQ повідомлення, яке містить ObjectID створеного контакту, і так для всіх згенерованих контактів.

Скрипт consumer.py отримує з черги RabbitMQ повідомлення, обробляє його та імітує функцією-заглушкою надсилання 
повідомлення по email. Після надсилання повідомлення необхідно логічне поле для контакту встановити в True. Скрипт 
працює постійно в очікуванні повідомлень з RabbitMQ.
Wiki

Функція-заглушка (англ. stub function) - функція, що не виконує жодної осмисленої дії, що повертає порожній результат 
або вхідні дані у незмінному вигляді. Те саме, що заглушка методу.

Заглушка може імітувати поведінку існуючого коду (наприклад, процедури на віддаленому комп'ютері) або бути тимчасовою 
заміною ще не створеного коду. Наприклад, замість функції, що виконує складні обчислення, можна тимчасово (доки не буде 
написана сама функція) поставити заглушку, що завжди повертає 1, і відлагоджувати інші функції, що залежать від неї.
Додаткове завдання
Введіть у моделі додаткове поле — телефонний номер. Також додайте поле, що відповідає за кращий спосіб надсилання 
повідомлень — SMS по телефону або email. Нехай producer.py відправляє у різні черги контакти для SMS та email. Створіть 
два скрипти consumer_sms.py та consumer_email.py, кожен з яких отримує свої контакти та обробляє їх.
'''

import datetime

from mongoengine import Document
from mongoengine.fields import StringField, BooleanField, DateTimeField


class Contact(Document):
    fullname = StringField(size=100, required=True)
    email = StringField(size=100, required=True)
    address = StringField(size=255, default=None)
    phone = StringField(size=255, default=None)

    delivery_preference = StringField(default='email')
    created_at = DateTimeField(default=datetime.datetime.now())
    is_delivered = BooleanField(default=False)

