from _typeshed import Incomplete

class BaseField:
    name: Incomplete
    creation_counter: int
    auto_creation_counter: int
    db_field: Incomplete
    required: Incomplete
    default: Incomplete
    unique: Incomplete
    unique_with: Incomplete
    primary_key: Incomplete
    validation: Incomplete
    choices: Incomplete
    null: Incomplete
    sparse: Incomplete
    def __init__(self, db_field: Incomplete | None = ..., required: bool = ..., default: Incomplete | None = ..., unique: bool = ..., unique_with: Incomplete | None = ..., primary_key: bool = ..., validation: Incomplete | None = ..., choices: Incomplete | None = ..., null: bool = ..., sparse: bool = ..., **kwargs) -> None: ...
    def __get__(self, instance, owner): ...
    def __set__(self, instance, value) -> None: ...
    def error(self, message: str = ..., errors: Incomplete | None = ..., field_name: Incomplete | None = ...) -> None: ...
    def to_python(self, value): ...
    def to_mongo(self, value): ...
    def prepare_query_value(self, op, value): ...
    def validate(self, value, clean: bool = ...) -> None: ...
    @property
    def owner_document(self): ...
    @owner_document.setter
    def owner_document(self, owner_document) -> None: ...

class ComplexBaseField(BaseField):
    field: Incomplete
    def __init__(self, field: Incomplete | None = ..., **kwargs) -> None: ...
    def __set__(self, instance, value): ...
    def __get__(self, instance, owner): ...
    def to_python(self, value): ...
    def to_mongo(self, value, use_db_field: bool = ..., fields: Incomplete | None = ...): ...
    def validate(self, value) -> None: ...
    def prepare_query_value(self, op, value): ...
    def lookup_member(self, member_name): ...

class ObjectIdField(BaseField):
    def to_python(self, value): ...
    def to_mongo(self, value): ...
    def prepare_query_value(self, op, value): ...
    def validate(self, value) -> None: ...

class GeoJsonBaseField(BaseField):
    def __init__(self, auto_index: bool = ..., *args, **kwargs) -> None: ...
    def validate(self, value): ...
    def to_mongo(self, value): ...
